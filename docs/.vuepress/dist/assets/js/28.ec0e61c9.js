(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{254:function(e,t,r){"use strict";r.r(t);var n=r(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"优先队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优先队列","aria-hidden":"true"}},[e._v("#")]),e._v(" 优先队列")]),e._v(" "),r("p",[e._v("优先队列(PriorityQueue)")]),e._v(" "),r("p",[e._v("正常⼊、按照优先级出\n实现可以是")]),e._v(" "),r("ul",[r("li",[e._v("堆\n"),r("ul",[r("li",[e._v("二叉堆 查找是 O(1)，删除、插入是 O(logn)，合并是 O(n)")]),e._v(" "),r("li",[e._v("fibonacci 堆 查、插入、合并都是 O(1)，删除是 O(logn)")])])]),e._v(" "),r("li",[e._v("二分查找树")])]),e._v(" "),r("p",[e._v("复杂度")]),e._v(" "),r("h2",{attrs:{id:"题目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目","aria-hidden":"true"}},[e._v("#")]),e._v(" 题目")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://leetcode.com/problems/kth-largest-element-in-a-stream"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode.com/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://leetcode.com/problems/sliding-window-maximum/"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);