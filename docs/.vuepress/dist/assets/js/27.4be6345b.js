(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{253:function(t,e,l){"use strict";l.r(e);var s=l(0),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"堆和栈"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#堆和栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 堆和栈")]),t._v(" "),l("ul",[l("li",[t._v("stack 数组或单双链表 查 O(n) 插入，删除 O(1)")]),t._v(" "),l("li",[t._v("queue 数组或单双链表 查 O(n) 插入，删除 O(1)")])]),t._v(" "),l("p",[t._v("http://www.bigocheatsheet.com/ 罗列了各种数据结构和算法时间复杂度\nBig O Cheat Sheet")]),t._v(" "),l("ol",[l("li",[t._v("https://leetcode.com/problems/backspace-string-compare/description/ 844")]),t._v(" "),l("li",[t._v("https://leetcode.com/problems/implement-queue-using-stacks/solution/ 232")]),t._v(" "),l("li",[t._v("https://leetcode.com/problems/implement-stack-using-queues/description/ 225")])]),t._v(" "),l("ul",[l("li",[t._v("只用栈实现队列，或只用队列实现栈\n用 input 和 output，两个 stack。如果要出队，就 pop 从 output 里出、入队 push 到 input 里。output 如果没有，就将 input 里的数据移到 output，peek 用于查看末尾的元素，看 output。")])]),t._v(" "),l("ol",[l("li",[t._v("https://leetcode.com/problems/valid-parentheses/description/ 20")])]),t._v(" "),l("ul",[l("li",[t._v("使用栈\n"),l("ul",[l("li",[t._v("左 push")]),t._v(" "),l("li",[t._v("右 peek")]),t._v(" "),l("li",[t._v("最终看是否 empty")])])]),t._v(" "),l("li",[t._v("do while 循环 replace () [] {}")])])])}),[],!1,null,null,null);e.default=i.exports}}]);