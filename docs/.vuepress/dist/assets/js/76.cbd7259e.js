(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{315:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vue-文档阅读笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-文档阅读笔记","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 文档阅读笔记")]),e._v(" "),a("h2",{attrs:{id:"指令、插值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令、插值","aria-hidden":"true"}},[e._v("#")]),e._v(" 指令、插值")]),e._v(" "),a("ul",[a("li",[e._v("插值、表达式")]),e._v(" "),a("li",[e._v("指令、动态属性 (:id='x')")]),e._v(" "),a("li",[e._v("v-html：会有 xss 风险，会覆盖子组件")])]),e._v(" "),a("h2",{attrs:{id:"computed-和-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch","aria-hidden":"true"}},[e._v("#")]),e._v(" computed 和 watch")]),e._v(" "),a("ul",[a("li",[e._v("computed 有缓存，data 不变不会重新计算")]),e._v(" "),a("li",[e._v("watch 如何深度监听")]),e._v(" "),a("li",[e._v("watch 监听引用类型，拿不到 oldValue，因为引用类型修改后，原来的值已经覆盖了，同一个地址")])]),e._v(" "),a("p",[e._v("v-model computed 要 get 和 set")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('v-model="a"\ncomputed:{\n    a:{\n        get(){},\n        set(){}\n    }\n}\n')])])]),a("p",[e._v("class 和 style")]),e._v(" "),a("ul",[a("li",[e._v("使用动态属性")]),e._v(" "),a("li",[e._v("使用驼峰写法")])]),e._v(" "),a("h2",{attrs:{id:"条件渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染","aria-hidden":"true"}},[e._v("#")]),e._v(" 条件渲染")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("v-if\nv-else-if\nv-else\nv-show\n")])])]),a("p",[e._v("v-if 更新不频繁\nv-show 更新频繁")]),e._v(" "),a("h2",{attrs:{id:"循环列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环列表","aria-hidden":"true"}},[e._v("#")]),e._v(" 循环列表")]),e._v(" "),a("ul",[a("li",[e._v("如何遍历对象 也可以 v-for")]),e._v(" "),a("li",[e._v("key 的重要性")]),e._v(" "),a("li",[e._v("v-for 和 v-if 不能一起使用, v-for 循环， 会多次 v-if 计算，可以将 v-if 放到外层")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("v-for = (item, index) in arr\nv-for = (val, key,index) in obj\n")])])]),a("p",[e._v("事件\nevent 参数、自定义参数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@click='add' 会自动传过去\nadd(event){\n    event.__proto__.constructor // 是原生的事件对象\n    event.target   // 当前元素\n    event.currentTarget // 事件被注册到当前元素\n}\n@click='add(2, $event)' 最后一个参数\n")])])]),a("p",[e._v("事件修饰符、按键修饰符\n.stop\n.prevent\nsubmit.prevent\n.capture\n.self\n.ctrl\n.ctrl.exact\n.exact 没有任何按键修饰符\n观察事件被绑定到哪里？")]),e._v(" "),a("p",[e._v("表单\nv-model\n常见表单项 textarea checkbox radio select\n修饰符 lazy number trim")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<input type='text' v-model.trim=\"name\">\n<input type='text' v-model.lazy=\"name\">\n<input type='text' v-model.number=\"name\">\n\n<textarea v-model='desc'></textarea>\n// 不能像正常 <textarea>hello</textarea>\n\nv-model\n\nselect v-model='select'\nselect multiple  v-model='selectList'\n")])])]),a("p",[e._v("vue 组件使用\n"),a("code",[e._v("props")]),e._v(" "),a("code",[e._v("$emit")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("props: ['list']\nprops: {\n    list: {\n        type: Array,\n        default(){\n            return []\n        }\n    }\n}\n\n// 父子组件通信 props $emit\n<Input @add='add' />\n\nInput 组件里 可以 this.emit('add', params) 调用父组件的事件\n\ndel: 删除 todolist\nthis.list = this.list.filter(x=>x.id!=id)\n")])])]),a("p",[e._v("组件间通讯 - 自定义事件\n组件生命周期")]),e._v(" "),a("p",[e._v("兄弟组件通信")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("event = new Vue()\n// 在其它地方都可以\nevent.$on('addx', this.add)\nevent.$emit('addx',params) 调用自身组件的 自定义事件\n\nbeforeDestroy  及时销毁，防止内存泄露\nevent.$off('addx', this.add)\n")])])]),a("p",[e._v("生命周期"),a("br"),e._v("\nbeforeDestroy 做什么事情\n父子组件生命周期调用顺序")])])}),[],!1,null,null,null);t.default=s.exports}}]);